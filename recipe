# A Bootstrap that use the Docker Container Library
Bootstrap: docker
# Contatiner image
From: nvidia/cuda:10.1-devel-centos7

# Store metadata with your containers add labels section
%labels

# Use it to install container dependencies. You cannot copy files 
# from the host to your container in this section, but you can of 
# course download with commands like git clone and wget and curl.
%post
    yum -y update
    yum install -y \
	autoconf  \
	ca-certificates  \
	cython \
	cython3 \
	g++ \
	gawk \
	gfortran-7  \
	git \
	gsl-bin \
	libgsl-dev \
	gnuplot \
	libblas-dev \
	liblapack-dev \
	libblacs-mpi-dev  \
	libblacs-openmpi1  \
	libfftw3-3  \
	libfftw3-bin  \
	libfftw3-dev  \
	libfftw3-doc  \
	libfftw3-double3   \
	libgfortran-7-dev  \
	libgomp1 \
	libmatheval1 \
	libmatheval-dev \
	libopenblas-base  \
	libopenblas-dev  \
	libopenmpi-dev  \
	libxext-dev \
	make  \
	nano \
	net-tools  \
	openssh-server  \
	patch \
	python \
	python-backports-shutil-get-terminal-size \
	python-dev \
	python-matplotlib \
	python3-matplotlib \
	python-numpy \
	python3-numpy \
	python3-numpydoc \
	python-os-client-config \
	python-os-service-types \
	python-pip \
	python3-pip \
	python-scipy \
	python3-scipy \
	python-setuptools \
	python3-setuptools \
	python-subprocess32 \
	python3-whichcraft \
	sudo  \
	tar \
	vim \
	wget  \
	xxd \
	xxdiff \
	zlib1g \
	zlib1g-dev 
    yum -y update

    #Install CMake 3
    wget https://cmake.org/files/v3.12/cmake-3.12.3.tar.gz
    tar xfz cmake-3.12.3.tar.gz
    cd cmake-3.12.3
    export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/usr/local/lib64:/usr/lib64
    ./bootstrap
    make -j 4
    make install
    
    #Install OpenMPI 3.1.2
    mkdir -p /tmp/mpi
    cd /tmp/mpi

    wget https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.2.tar.gz
    tar xfz openmpi-3.1.2.tar.gz
    cd openmpi-3.1.2
    ./configure --prefix=/usr/local
    make
    make install
    # su -c "mkdir -p /home/mpiuser/.ssh/" mpiuser
    echo 'StrictHostKeyChecking=no' >> /etc/ssh/sshd_config
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib/"

    #Install Plumed 2.5.3
    wget https://github.com/plumed/plumed2/releases/download/v2.5.3/plumed-2.5.3.tgz
    tar xfz plumed-2.5.3.tgz
    cd plumed-2.5.3
    ./configure  --enable-modules=all CXXFLAGS=-O3; 
    make -j 4
    make install
    
    # Install Gromacs 2019
    mkdir -p /tmp/gromacs
    cd /tmp/gromacs

    wget http://ftp.gromacs.org/pub/gromacs/gromacs-2019.4.tar.gz
    tar xfz gromacs-2019.4.tar.gz
    cd gromacs-2019.4
    plumed patch -p -e gromacs-2019.4
    mkdir -p build
    cd build
    cmake .. \
        -DGMX_GPU=ON \
        -DGMX_MPI=ON \
        -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
        -DGMX_BUILD_OWN_FFTW=ON \
        -DCMAKE_CXX_COMPILER=/usr/local/bin/mpic++ \
        -DCMAKE_C_COMPILER=/usr/local/bin/mpicc
	-DBUILD_SHARED_LIBS=OFF
	-DGMX_PREFER_STATIC_LIBS=ON
    make
    # make check # The test fails because MPI is run as root when the image is build
    make install
    # source /usr/local/gromacs/bin/GMXRC

# Place contaner environmet variables here
%environment
    export PATH="/usr/local/gromacs/bin/:$PATH"
    export LD_LIBRARY_PATH="/usr/local/lib/:$LD_LIBRARY_PATH"

# The %runscript is another scriptlet, but it does not get executed during bootstrapping. 
# Instead it gets persisted within the container to a file called /singularity which is 
# the execution driver when the container image is run (either via the singularity run 
# command or via executing the container directly).

# When the %runscript is executed, all options are passed along to the executing script 
# at runtime, this means that you can (and should) manage argument processing from within 
# your runscript. Here is an example of how to do that.
%runscript

# You may choose to add a %test section to your definition file. This section will be run at 
# the very end of the boostrapping process and will give you a chance to validate the container 
# during the bootstrap process. You can also execute this scriptlet through the container itself,
# such that you can always test the validity of the container itself as you transport it to different hosts.
# Extending on the above Open MPI %post, consider this example:
#%test
#   echo "The test section was executed"
